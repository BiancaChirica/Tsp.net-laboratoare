//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotos
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Photo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime Data_creareField;
        
        private bool DeletedField;
        
        private string DescriereField;
        
        private string PathField;
        
        private int PhotoIdField;
        
        private MyPhotos.Proprietate[] ProprietatesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data_creare
        {
            get
            {
                return this.Data_creareField;
            }
            set
            {
                this.Data_creareField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriere
        {
            get
            {
                return this.DescriereField;
            }
            set
            {
                this.DescriereField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoId
        {
            get
            {
                return this.PhotoIdField;
            }
            set
            {
                this.PhotoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Proprietate[] Proprietates
        {
            get
            {
                return this.ProprietatesField;
            }
            set
            {
                this.ProprietatesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proprietate", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Proprietate : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NumeProprietateField;
        
        private MyPhotos.Photo PhotoField;
        
        private int PhotoPhotoIdField;
        
        private int ProprietateIdField;
        
        private string ValoareProprietateField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeProprietate
        {
            get
            {
                return this.NumeProprietateField;
            }
            set
            {
                this.NumeProprietateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Photo Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoPhotoId
        {
            get
            {
                return this.PhotoPhotoIdField;
            }
            set
            {
                this.PhotoPhotoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProprietateId
        {
            get
            {
                return this.ProprietateIdField;
            }
            set
            {
                this.ProprietateIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValoareProprietate
        {
            get
            {
                return this.ValoareProprietateField;
            }
            set
            {
                this.ValoareProprietateField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPhotoProperty")]
public interface IPhotoProperty
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/AddPhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/AddPhotoWCFResponse")]
    string AddPhotoWCF(string path, System.DateTime data_creare, string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/AddPhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/AddPhotoWCFResponse")]
    System.Threading.Tasks.Task<string> AddPhotoWCFAsync(string path, System.DateTime data_creare, string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/DeletePhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/DeletePhotoWCFResponse")]
    string DeletePhotoWCF(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/DeletePhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/DeletePhotoWCFResponse")]
    System.Threading.Tasks.Task<string> DeletePhotoWCFAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetAllPhotosWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetAllPhotosWCFResponse")]
    MyPhotos.Photo[] GetAllPhotosWCF();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetAllPhotosWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetAllPhotosWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Photo[]> GetAllPhotosWCFAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/EditPhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/EditPhotoWCFResponse")]
    MyPhotos.Photo EditPhotoWCF(int id, string path, System.DateTime data_creare, string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/EditPhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/EditPhotoWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Photo> EditPhotoWCFAsync(int id, string path, System.DateTime data_creare, string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByIdWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByIdWCFResponse")]
    MyPhotos.Photo GetPhotosByIdWCF(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByIdWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByIdWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Photo> GetPhotosByIdWCFAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByDescriereWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByDescriereWCFResponse")]
    MyPhotos.Photo[] GetPhotosByDescriereWCF(string descriere);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByDescriereWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByDescriereWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Photo[]> GetPhotosByDescriereWCFAsync(string descriere);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByDateWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByDateWCFResponse")]
    MyPhotos.Photo[] GetPhotosByDateWCF(System.DateTime date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByDateWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByDateWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Photo[]> GetPhotosByDateWCFAsync(System.DateTime date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/MarkDeletedWCF", ReplyAction="http://tempuri.org/InterfacePhoto/MarkDeletedWCFResponse")]
    string MarkDeletedWCF(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/MarkDeletedWCF", ReplyAction="http://tempuri.org/InterfacePhoto/MarkDeletedWCFResponse")]
    System.Threading.Tasks.Task<string> MarkDeletedWCFAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/AddProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/AddProprietateWCFResponse")]
    string AddProprietateWCF(int photoid, string numeProp, string valoareProp);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/AddProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/AddProprietateWCFResponse")]
    System.Threading.Tasks.Task<string> AddProprietateWCFAsync(int photoid, string numeProp, string valoareProp);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/DeleteProprietateWCFResponse")]
    string DeleteProprietateWCF(int idProp);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/DeleteProprietateWCFResponse")]
    System.Threading.Tasks.Task<string> DeleteProprietateWCFAsync(int idProp);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/EditProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/EditProprietateWCFResponse")]
    string EditProprietateWCF(int id, string numeP, string valoareP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/EditProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/EditProprietateWCFResponse")]
    System.Threading.Tasks.Task<string> EditProprietateWCFAsync(int id, string numeP, string valoareP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProprietatiWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllProprietatiWCFResponse")]
    MyPhotos.Proprietate[] GetAllProprietatiWCF();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProprietatiWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllProprietatiWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetAllProprietatiWCFAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByNameWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByNameWCFResponse")]
    MyPhotos.Proprietate[] GetProprietatiByNameWCF(string numeP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByNameWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByNameWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByNameWCFAsync(string numeP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByValueWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByValueWCFResponse")]
    MyPhotos.Proprietate[] GetProprietatiByValueWCF(string valoareP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByValueWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByValueWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByValueWCFAsync(string valoareP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByNameAndValueWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByNameAndValueWCFResponse")]
    MyPhotos.Proprietate[] GetProprietatiByNameAndValueWCF(string numeP, string valoareP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByNameAndValueWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByNameAndValueWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByNameAndValueWCFAsync(string numeP, string valoareP);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByIdWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByIdWCFResponse")]
    MyPhotos.Proprietate[] GetProprietatiByIdWCF(int idPhoto);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByIdWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByIdWCFResponse")]
    System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByIdWCFAsync(int idPhoto);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IPhotoPropertyChannel : IPhotoProperty, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PhotoPropertyClient : System.ServiceModel.ClientBase<IPhotoProperty>, IPhotoProperty
{
    
    public PhotoPropertyClient()
    {
    }
    
    public PhotoPropertyClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public PhotoPropertyClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PhotoPropertyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PhotoPropertyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string AddPhotoWCF(string path, System.DateTime data_creare, string description)
    {
        return base.Channel.AddPhotoWCF(path, data_creare, description);
    }
    
    public System.Threading.Tasks.Task<string> AddPhotoWCFAsync(string path, System.DateTime data_creare, string description)
    {
        return base.Channel.AddPhotoWCFAsync(path, data_creare, description);
    }
    
    public string DeletePhotoWCF(int id)
    {
        return base.Channel.DeletePhotoWCF(id);
    }
    
    public System.Threading.Tasks.Task<string> DeletePhotoWCFAsync(int id)
    {
        return base.Channel.DeletePhotoWCFAsync(id);
    }
    
    public MyPhotos.Photo[] GetAllPhotosWCF()
    {
        return base.Channel.GetAllPhotosWCF();
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Photo[]> GetAllPhotosWCFAsync()
    {
        return base.Channel.GetAllPhotosWCFAsync();
    }
    
    public MyPhotos.Photo EditPhotoWCF(int id, string path, System.DateTime data_creare, string description)
    {
        return base.Channel.EditPhotoWCF(id, path, data_creare, description);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Photo> EditPhotoWCFAsync(int id, string path, System.DateTime data_creare, string description)
    {
        return base.Channel.EditPhotoWCFAsync(id, path, data_creare, description);
    }
    
    public MyPhotos.Photo GetPhotosByIdWCF(int id)
    {
        return base.Channel.GetPhotosByIdWCF(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Photo> GetPhotosByIdWCFAsync(int id)
    {
        return base.Channel.GetPhotosByIdWCFAsync(id);
    }
    
    public MyPhotos.Photo[] GetPhotosByDescriereWCF(string descriere)
    {
        return base.Channel.GetPhotosByDescriereWCF(descriere);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Photo[]> GetPhotosByDescriereWCFAsync(string descriere)
    {
        return base.Channel.GetPhotosByDescriereWCFAsync(descriere);
    }
    
    public MyPhotos.Photo[] GetPhotosByDateWCF(System.DateTime date)
    {
        return base.Channel.GetPhotosByDateWCF(date);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Photo[]> GetPhotosByDateWCFAsync(System.DateTime date)
    {
        return base.Channel.GetPhotosByDateWCFAsync(date);
    }
    
    public string MarkDeletedWCF(int id)
    {
        return base.Channel.MarkDeletedWCF(id);
    }
    
    public System.Threading.Tasks.Task<string> MarkDeletedWCFAsync(int id)
    {
        return base.Channel.MarkDeletedWCFAsync(id);
    }
    
    public string AddProprietateWCF(int photoid, string numeProp, string valoareProp)
    {
        return base.Channel.AddProprietateWCF(photoid, numeProp, valoareProp);
    }
    
    public System.Threading.Tasks.Task<string> AddProprietateWCFAsync(int photoid, string numeProp, string valoareProp)
    {
        return base.Channel.AddProprietateWCFAsync(photoid, numeProp, valoareProp);
    }
    
    public string DeleteProprietateWCF(int idProp)
    {
        return base.Channel.DeleteProprietateWCF(idProp);
    }
    
    public System.Threading.Tasks.Task<string> DeleteProprietateWCFAsync(int idProp)
    {
        return base.Channel.DeleteProprietateWCFAsync(idProp);
    }
    
    public string EditProprietateWCF(int id, string numeP, string valoareP)
    {
        return base.Channel.EditProprietateWCF(id, numeP, valoareP);
    }
    
    public System.Threading.Tasks.Task<string> EditProprietateWCFAsync(int id, string numeP, string valoareP)
    {
        return base.Channel.EditProprietateWCFAsync(id, numeP, valoareP);
    }
    
    public MyPhotos.Proprietate[] GetAllProprietatiWCF()
    {
        return base.Channel.GetAllProprietatiWCF();
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetAllProprietatiWCFAsync()
    {
        return base.Channel.GetAllProprietatiWCFAsync();
    }
    
    public MyPhotos.Proprietate[] GetProprietatiByNameWCF(string numeP)
    {
        return base.Channel.GetProprietatiByNameWCF(numeP);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByNameWCFAsync(string numeP)
    {
        return base.Channel.GetProprietatiByNameWCFAsync(numeP);
    }
    
    public MyPhotos.Proprietate[] GetProprietatiByValueWCF(string valoareP)
    {
        return base.Channel.GetProprietatiByValueWCF(valoareP);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByValueWCFAsync(string valoareP)
    {
        return base.Channel.GetProprietatiByValueWCFAsync(valoareP);
    }
    
    public MyPhotos.Proprietate[] GetProprietatiByNameAndValueWCF(string numeP, string valoareP)
    {
        return base.Channel.GetProprietatiByNameAndValueWCF(numeP, valoareP);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByNameAndValueWCFAsync(string numeP, string valoareP)
    {
        return base.Channel.GetProprietatiByNameAndValueWCFAsync(numeP, valoareP);
    }
    
    public MyPhotos.Proprietate[] GetProprietatiByIdWCF(int idPhoto)
    {
        return base.Channel.GetProprietatiByIdWCF(idPhoto);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Proprietate[]> GetProprietatiByIdWCFAsync(int idPhoto)
    {
        return base.Channel.GetProprietatiByIdWCFAsync(idPhoto);
    }
}
