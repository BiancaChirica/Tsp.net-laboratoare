//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Photo : object
    {
        
        private System.DateTime Data_creareField;
        
        private bool DeletedField;
        
        private string DescriereField;
        
        private string PathField;
        
        private int PhotoIdField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate> ProprietatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data_creare
        {
            get
            {
                return this.Data_creareField;
            }
            set
            {
                this.Data_creareField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriere
        {
            get
            {
                return this.DescriereField;
            }
            set
            {
                this.DescriereField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoId
        {
            get
            {
                return this.PhotoIdField;
            }
            set
            {
                this.PhotoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate> Proprietates
        {
            get
            {
                return this.ProprietatesField;
            }
            set
            {
                this.ProprietatesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proprietate", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Proprietate : object
    {
        
        private string NumeProprietateField;
        
        private ServiceReferenceMyPhotos.Photo PhotoField;
        
        private int PhotoPhotoIdField;
        
        private int ProprietateIdField;
        
        private string ValoareProprietateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeProprietate
        {
            get
            {
                return this.NumeProprietateField;
            }
            set
            {
                this.NumeProprietateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Photo Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoPhotoId
        {
            get
            {
                return this.PhotoPhotoIdField;
            }
            set
            {
                this.PhotoPhotoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProprietateId
        {
            get
            {
                return this.ProprietateIdField;
            }
            set
            {
                this.ProprietateIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValoareProprietate
        {
            get
            {
                return this.ValoareProprietateField;
            }
            set
            {
                this.ValoareProprietateField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotos.IPhotoProperty")]
    public interface IPhotoProperty
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/AddPhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/AddPhotoWCFResponse")]
        System.Threading.Tasks.Task<string> AddPhotoWCFAsync(string path, System.DateTime data_creare, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/DeletePhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/DeletePhotoWCFResponse")]
        System.Threading.Tasks.Task<string> DeletePhotoWCFAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetAllPhotosWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetAllPhotosWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetAllPhotosWCFAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/EditPhotoWCF", ReplyAction="http://tempuri.org/InterfacePhoto/EditPhotoWCFResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Photo> EditPhotoWCFAsync(int id, string path, System.DateTime data_creare, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByIdWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByIdWCFResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Photo> GetPhotosByIdWCFAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByDescriereWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByDescriereWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotosByDescriereWCFAsync(string descriere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/GetPhotosByDateWCF", ReplyAction="http://tempuri.org/InterfacePhoto/GetPhotosByDateWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotosByDateWCFAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhoto/MarkDeletedWCF", ReplyAction="http://tempuri.org/InterfacePhoto/MarkDeletedWCFResponse")]
        System.Threading.Tasks.Task<string> MarkDeletedWCFAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/AddProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/AddProprietateWCFResponse")]
        System.Threading.Tasks.Task<string> AddProprietateWCFAsync(int photoid, string numeProp, string valoareProp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/DeleteProprietateWCFResponse")]
        System.Threading.Tasks.Task<string> DeleteProprietateWCFAsync(int idProp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/EditProprietateWCF", ReplyAction="http://tempuri.org/InterfaceProperty/EditProprietateWCFResponse")]
        System.Threading.Tasks.Task<string> EditProprietateWCFAsync(int id, string numeP, string valoareP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProprietatiWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllProprietatiWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetAllProprietatiWCFAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByNameWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByNameWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByNameWCFAsync(string numeP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByValueWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByValueWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByValueWCFAsync(string valoareP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByNameAndValueWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByNameAndValueWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByNameAndValueWCFAsync(string numeP, string valoareP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProprietatiByIdWCF", ReplyAction="http://tempuri.org/InterfaceProperty/GetProprietatiByIdWCFResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByIdWCFAsync(int idPhoto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IPhotoPropertyChannel : ServiceReferenceMyPhotos.IPhotoProperty, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PhotoPropertyClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotos.IPhotoProperty>, ServiceReferenceMyPhotos.IPhotoProperty
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PhotoPropertyClient() : 
                base(PhotoPropertyClient.GetDefaultBinding(), PhotoPropertyClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPhotoProperty.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropertyClient(EndpointConfiguration endpointConfiguration) : 
                base(PhotoPropertyClient.GetBindingForEndpoint(endpointConfiguration), PhotoPropertyClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropertyClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PhotoPropertyClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropertyClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PhotoPropertyClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropertyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> AddPhotoWCFAsync(string path, System.DateTime data_creare, string description)
        {
            return base.Channel.AddPhotoWCFAsync(path, data_creare, description);
        }
        
        public System.Threading.Tasks.Task<string> DeletePhotoWCFAsync(int id)
        {
            return base.Channel.DeletePhotoWCFAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetAllPhotosWCFAsync()
        {
            return base.Channel.GetAllPhotosWCFAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Photo> EditPhotoWCFAsync(int id, string path, System.DateTime data_creare, string description)
        {
            return base.Channel.EditPhotoWCFAsync(id, path, data_creare, description);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Photo> GetPhotosByIdWCFAsync(int id)
        {
            return base.Channel.GetPhotosByIdWCFAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotosByDescriereWCFAsync(string descriere)
        {
            return base.Channel.GetPhotosByDescriereWCFAsync(descriere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotosByDateWCFAsync(System.DateTime date)
        {
            return base.Channel.GetPhotosByDateWCFAsync(date);
        }
        
        public System.Threading.Tasks.Task<string> MarkDeletedWCFAsync(int id)
        {
            return base.Channel.MarkDeletedWCFAsync(id);
        }
        
        public System.Threading.Tasks.Task<string> AddProprietateWCFAsync(int photoid, string numeProp, string valoareProp)
        {
            return base.Channel.AddProprietateWCFAsync(photoid, numeProp, valoareProp);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProprietateWCFAsync(int idProp)
        {
            return base.Channel.DeleteProprietateWCFAsync(idProp);
        }
        
        public System.Threading.Tasks.Task<string> EditProprietateWCFAsync(int id, string numeP, string valoareP)
        {
            return base.Channel.EditProprietateWCFAsync(id, numeP, valoareP);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetAllProprietatiWCFAsync()
        {
            return base.Channel.GetAllProprietatiWCFAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByNameWCFAsync(string numeP)
        {
            return base.Channel.GetProprietatiByNameWCFAsync(numeP);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByValueWCFAsync(string valoareP)
        {
            return base.Channel.GetProprietatiByValueWCFAsync(valoareP);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByNameAndValueWCFAsync(string numeP, string valoareP)
        {
            return base.Channel.GetProprietatiByNameAndValueWCFAsync(numeP, valoareP);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Proprietate>> GetProprietatiByIdWCFAsync(int idPhoto)
        {
            return base.Channel.GetProprietatiByIdWCFAsync(idPhoto);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPhotoProperty))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPhotoProperty))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PhotoPropertyClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPhotoProperty);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PhotoPropertyClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPhotoProperty);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPhotoProperty,
        }
    }
}
